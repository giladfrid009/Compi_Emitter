bool isValidInput(int num) {
    return (num > 0) and (num < 100);
}

bool isDivisible(int num1, int divisor) {
    int count = 0;
    int num = num1;
    while (num >= divisor) {
        num = num - divisor;
        count = count + 1;
    }
    return num == 0;
}

int getHighestPrimeFactor(int num1) {
    int num = num1;
    int highestPrimeFactor = 0;
    int i = 2;
    while (i <= num) {
        if (isDivisible(num, i)) {
            bool isPrime = true;
            int j = 2;
            while (j < i) {
                if (isDivisible(i, j)) {
                    isPrime = false;
                    break;
                }
                j = j + 1;
            }
            if (isPrime) {
                highestPrimeFactor = i;
            }
        }
        i = i + 1;
    }
    return highestPrimeFactor;
}

void main() {
    int num = 50;
    bool isValid = isValidInput(num);
    int highestPrimeFactor = getHighestPrimeFactor(num);
    printi(highestPrimeFactor);
    int result = 0;
    if (isValid) {
        int i = 1;
        while (i <= num) {
            int j = 1;
            while (j <= i) {
                if (isDivisible(num, i*j)) {
                    int tempResult = i if (i <= highestPrimeFactor) else highestPrimeFactor;
                    printi(tempResult);
                }
                j = j + 1;
            }
            i = i + 1;
        }
    } else {
        result = 0;
    }
    printi(result);
    return;
}